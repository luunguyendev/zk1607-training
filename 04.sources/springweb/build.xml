<?xml version="1.0"?> 
<project name="springweb" default="server-deploy">
	<description>Compiles and runs a simple program</description>
	<property file="build.properties"/>
	<property name="build-dir" value="build/classes" />
	<property name="war-dir" value="dist" />
	<property name="src-dir" value="src" />
	<property name="backup-dir" value="backup" />
	<fileset dir="${src-dir}" includes="**/*.java" id="source.fileset"></fileset>
	
	<target name="init">
		<mkdir dir="${build-dir}" />
		<mkdir dir="${war-dir}" />
		<mkdir dir="${backup-dir}" />
	</target>
	
	<target name="compile" depends="init"
		description="Compiles the source code">
		<javac srcdir="${src-dir}" destdir="${build-dir}" />
		<echo>Compilation complete!</echo>
	</target>
	
	<target name="doc" depends="init">
		<javadoc destdir="${build-dir}" sourcepath="${src-dir}/main/java" packagenames="com.*"/>
	</target>

	<target name="archive" depends="compile"
		description="Creates the JAR file">
		<jar destfile="${war-dir}/springweb.jar" basedir="${build-dir}" />
	</target>
	
	<target name="clean" depends="init"
		description="Removes the temporary directories used">
		<delete dir="build" />
		<delete dir="${war-dir}" />
	</target>
	
	<target name="execute" depends="compile"
		description="Runs the program">
		<echo level="warning" message="running" />
		<java classname="com.springweb.utils.StringUtils"
				classpath="${build-dir}">
			<arg value="a" />
			<arg value="b" />
			<arg file="." />
		</java>
	</target>
	
	<target name="backup" depends="init">
		<copy todir="${backup-dir}">
			<fileset refid="source.fileset" excludes="**/*.xml"/>
		</copy>
	</target>
	
<!--
	##############################################################
	##############################################################
-->
	
	<target name="mvn-clean" description="Maven clean source code.">
		<exec executable="cmd">
			<arg value="/C" />
			<arg value="mvn.cmd"/>
			<arg value="clean"/>
		</exec>
	</target>

	<target name="mvn-build" depends="mvn-clean">
		<exec executable="cmd">
			<arg value="/C" />
			<arg value="mvn.cmd"/>
			<arg value="install"/>
		</exec>
	</target>
	
	<target name="copy-to-server">
		<copydir src="${project-dir}/src/main/webapp" dest="${app-server-dir}" />
	</target>
	
	<target name="clean-server" depends="server-stop">
		<delete dir="${app-server-dir}" />
	</target>
	
	<target name="server-start">
		<exec dir="${server-dir}/bin" executable="cmd">
			<arg value="/C" />
			<arg value="startserv.bat"/>
		</exec>
	</target>
	
	<target name="server-stop">
		<exec dir="${server-dir}/bin" executable="cmd">
			<arg value="/C" />
			<arg value="stopserv.bat"/>
		</exec>
	</target>
	
	<target name="server-restart" depends="server-undeploy, server-stop, mvn-build, server-start, server-deploy" />

	<target name="server-deploy" depends="mvn-build">
		<exec dir="${server-dir}/bin" failonerror="true" executable="cmd">
	    	<arg value="/C" />
	    	<arg value="asadmin --user ${gf-user} --passwordFile ${project-dir}/password.txt --host ${gf-host} --port ${gf-admin-port} deploy ${project-dir}/target/${app-war}" />
	    </exec>
	</target>
	
	<target name="server-undeploy">
		<exec dir="${server-dir}/bin" failonerror="true" executable="cmd">
	    	<arg value="/C" />
	    	<arg value="asadmin --user ${gf-user} --passwordFile ${project-dir}/password.txt --host ${gf-host} --port ${gf-admin-port} undeploy ${project-dir}/target/${app-name}" />
	    </exec>
	</target>
	
	<target name="server-redeploy" depends="server-undeploy,server-deploy" />
	
	<target name="server-debug" depends="mvn-build">
		<exec dir="${server-dir}/bin" failonerror="true" executable="cmd">
	    	<arg value="/C" />
	    	<arg value="asadmin start-domain --debug domain1" />
	    </exec>
	</target>
</project>